/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2025 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

#define LAYER_Base 0
#define LAYER_Steno_Ko 1
#define LAYER_Lower 2
#define LAYER_Magic 3

#ifndef LAYER_Lower
#define LAYER_Lower 0
#endif

&mmv_input_listener {
    input-processors = <&zip_xy_scaler 2 1>;
};

/ {
    behaviors {
        lower: lower {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LAYER_Lower>, <&to LAYER_Lower>;
        };
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
    };
};

/ {
#ifdef BT_DISC_CMD
    behaviors {
        bt_0: bt_0 { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&bt_select_0>, <&bt BT_DISC 0>; };
        bt_1: bt_1 { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&bt_select_1>, <&bt BT_DISC 1>; };
        bt_2: bt_2 { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&bt_select_2>, <&bt BT_DISC 2>; };
        bt_3: bt_3 { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&bt_select_3>, <&bt BT_DISC 3>; };
    };
    macros {
        bt_select_0: bt_select_0 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 0>; };
        bt_select_1: bt_select_1 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 1>; };
        bt_select_2: bt_select_2 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 2>; };
        bt_select_3: bt_select_3 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 3>; };
    };
#else
    macros {
        bt_0: bt_0 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 0>; };
        bt_1: bt_1 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 1>; };
        bt_2: bt_2 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 2>; };
        bt_3: bt_3 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 3>; };
    };
#endif
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
   &kp ESC    &kp F2  &kp F11   &kp F12     &kp F5                                                                                             &kp F6     &kp F7    &kp F8    &kp F9  &kp EQUAL
 &kp GRAVE    &kp N1   &kp N2    &kp N3     &kp N4  &kp N5                                                                             &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
     &none     &kp Q    &kp W     &kp E      &kp R   &kp T                                                                              &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp TAB     &kp A    &kp S     &kp D      &kp F   &kp G                                                                              &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LCTRL     &kp Z    &kp X     &kp C      &kp V   &kp B  &kp LSHFT  &kp BSPC  &magic LAYER_Magic 0  &kp LGUI  &kp LCTRL  &kp LSHFT   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp LANG1
    &lower  &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp SPACE   &kp RET              &kp LALT  &kp LALT    &kp DEL   &kp BSPC          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT  &kp LANG1
            >;
        };

        layer_Steno_Ko {
            bindings = <
 &trans   &trans   &trans   &trans   &trans                                                                               &trans   &trans   &trans   &trans   &trans
 &trans   &kp Q    &kp W    &kp E    &kp R         &kp T                                                  &kp Y    &kp U    &kp I    &kp O    &kp P    &trans
 &trans   &kp A    &kp S    &kp D    &kp F         &kp G                                                  &kp H    &kp J    &kp K    &kp L    &kp SEMI  &trans
 &trans   &kp Z    &kp X    &kp C    &kp V         &kp B                                                  &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &trans
 &trans   &trans  &trans  &trans   &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans   &trans   &trans   &trans   &trans
  &to 0    &trans  &trans  &trans   &trans                 &trans  &trans  &trans  &trans  &trans  &trans                &trans   &trans   &trans   &trans   &trans
            >;
        };

        layer_Lower {
            bindings = <
 &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV      &kp C_NEXT           &trans                                                                                                     &kp C_MUTE    &kp C_VOL_DN     &kp C_VOL_UP            &kt B  &kp PAUSE_BREAK
       &trans         &none       &none           &none            &none   &kp HOME                                                                &kp LEFT_PARENTHESIS      &kp KP_NUM    &kp KP_EQUAL     &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
       &trans         &none       &none    &kp UP_ARROW            &none    &kp END                                                                            &mkp MB5       &mkp LCLK    &mmv MOVE_UP        &mkp RCLK        &kp PSCRN   &kp SCROLLLOCK
       &trans         &none      &tog 1  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP                                                                            &mkp MB4  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT      &kp KP_PLUS            &none
       &trans         &kp Z       &kp X       &kp LC(C)        &kp LC(V)  &kp PG_DN  &trans  &trans  &magic LAYER_Magic 0  &trans  &trans  &trans         &kp LC(LA(M))    &msc SCRL_UP          &kp UP   &msc SCRL_DOWN   &msc SCRL_LEFT        &kp PG_UP
        &to 0      &kp CAPS     &kp INS       &kp LC(Z)        &kp LC(Y)             &trans  &trans                &trans  &trans  &trans  &trans                              &kp LEFT        &kp DOWN        &kp RIGHT  &msc SCRL_RIGHT        &kp PG_DN
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
  &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none      &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &to 0
            >;
        };
    };
};